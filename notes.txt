THESIS QUESTIONS:
- What am I exactly going to research? A combination of ECSIM with parareal/PFASST?

- What are your guidelines for literature study style/content/...?

- Guidelines for thesis style/content/...?
	subcycling; jacon, gpu using

- What timeline do you foresee
	
- Main goals vs secundary goals (need to have vs nice to have)
	need: working with subcycling
	nice: gpus

- problem statement, initial results, goals second semester

ECSIM QUESTIONS:
- Shouldn't there be a + in the alpha matrix instead of -? -> ja

- Also requires regular grid for energy conservation

- How come the energy conservation is checked by checking difference of energydiff, shouldn't you just check that the energy diff ~0 -> only guaranteed conservation each step?

- What in literatuurstudie -> introduction/progress report

- make tolerance for energy and states (1e-5, 1e-11) -> done

- should you stop calculating steps just cause they hit arbitrary threshold or only when hitting machine precision?


THESIS POINTS
- fine and parareal do not converge to same result for hyperbolic choatic example (only after long period -> correct implementation)
- energy conservation
- thresholds = 1e-8, 1e-12, 1e-16
- multiple symplectic integrators and parareal integrators -> not done
- split errors on x, v, E, B since they can all have way different normalisations
- also you are using equations with normalised units see ipic3D
- thesis is foundation for HPC gpus, but no implementation given
- coarse solvers : different time step, subcycling, different gridsize/particles
- there is no reason to approximate fine solution to 1e-16 since this is still just an approximation anyways
- why subcycling: use cores dedicated for parallelising fine in coarse as wel instead of idling
- speedup not always best measure, e.g. LU for fine solver -> biggest speedup, but parareal is still the slowest version

PLOTS:
- fine and parareal converge to same result (over small timeframes)
- errors on states to the timerange for different k (legend)

Simulate long time on a lot of cores
no distributed memory
first gpu -> more cores -> more parameter studies

QUESTIONS
- What should be on poster
- do something for meeting vandewalle?

TASKS:
- landau damping (done?)
- find energy conservation examples (why important) (high-fidelity simulations: Dense Z-pinch, fusion(ICF))
- look at convergence for total error of state and separated (done, E has large relative errors, but x errors are larger in absolute value -> E errors get divided by larger number if joined)
- check divergence of B, plot divergence of B for time evolution ( 0: but is not actually useful since in 1D the x-axis is only relevant axis, but remains the same during simulation)
- test with fewer particles (coarsening: choose from [min,max]) 1:2
- test with coarser grid 1:2 (128:256) (not great, really bad errors possibly due to chaotic behaviour)
- try GMRES (works)
- try for fewer cores 4,8,12
- try only calculating position, velocity during course and calculate everything during fine (does not work, electric and magnetic fields are normally the laggards in terms of error)
- get the results for 2, 5 and 10 subcycling steps ( is useful in some cases where it be just a bit better and as such skip a parareal iteration, while still being cheaper than refining dt_coarse)

- 4000 gridpoints, gmres for fine, LU for coarse

- 512: time coarsening, subcycling, coarsening space
- minres eigen (werkt niet, niet SPD)
- du/dt = grad(u) (1,-2,1) or (1,-1) with 10000 points and try to find instability with timesteps (CFL = 1/dx^2) (serial works gives good results, but still possible divergence in parareal)


- plot iterations and errors for gmres/BICGSTAB
- look at photo
- make crank nicholson python version of parareal convergence test\

POSTER:
- what is parareal, why care, what is coarse and fine solver-> find best coarse and fine solvers
- 3 points about particle in cell simulations, what it is
- simulation plots
- first and last rows (time, subcycling, different linear solvers)

TIPS:
- start with methods, results (even if failed, try to find why)
- put in initial plots, describe
- introduction: what are integrators(explicit, implicit) -> parareal -> 

THESIS:
- convergence plots (RK4, Crank nicholson on test)
- convergence of ECSIM 
- convergence of ECSIM with parareal
- simulation plot
- consider regular grid
- different test cases (1D1V, 1D3V)
- different coarse and fine solvers (temporal, subcycling, linear solvers)
- different number of cores/time frames ( factors of 1,2,4,6,12,18,24,...)
- appendix (spatial)
- Smoothness of problem is important for parareal convergence


